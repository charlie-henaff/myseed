{"version":3,"sources":["components/Layout/Drawer.js","components/Login.js","serviceWorker.js","theme.js","reducers/search.js","reducers/index.js","components/Layout/AppBar.js","components/Layout/SnackBar.js","components/Home.js","assets/img/man_listening_music_in_sleeping.jpg","components/Util/Overlay.js","components/Util/Card/Artist.js","components/SearchResult.js","routes/index.js","assets/img/woman_looking_through_records_at_vinyl_shop.jpg","components/Layout/Layout.js","index.js","reducers/layout/index.js","reducers/layout/snackBar.js","reducers/layout/appBar.js","reducers/layout/drawer.js"],"names":["iOS","process","browser","test","navigator","userAgent","Drawer","this","props","classes","open","toggle","changeDestination","destination","history","push","disableBackdropTransition","disableDiscovery","anchor","onOpen","onClose","bgcolor","color","className","header","variant","gutterBottom","onClick","localStorage","removeItem","APP_CONST","LOCAL_STORAGE","SPOTIFY_TOKEN","menu","button","primary","Component","connect","state","app","layout","drawer","dispatch","type","drawerStates","OPEN","withStyles","theme","height","display","justifyContent","alignItems","flexDirection","boxShadow","width","spotify_client_id","spotify_login_callback","LoginComponent","location","showError","store","layoutStates","VISIBLE","visible","FULL_SIZE_CONTENT","fullSizeContent","retry","spotifyAuthorize","getterParams","extractGetters","search","substring","code","spotifyGetToken","getItem","maxWidth","id","getterString","split","reduce","initial","item","parts","decodeURIComponent","window","encodeURIComponent","Buffer","from","body","fetch","method","headers","then","response","json","data","setItem","access_token","SPOTIFY_REFRESH_TOKEN","refresh_token","msg","snackBarState","severity","snackBarSeverity","error","message","isOpen","Boolean","hostname","match","createTheme","palette","main","secondary","overrides","margin","searchStates","combineReducers","loading","action","result","AppBar","searchValue","toggleDrawer","dispatchSearch","txt","length","elevation","position","root","Toolbar","IconButton","edge","Box","title","searchIcon","InputBase","placeholder","searchInput","value","inputProps","onChange","event","target","onKeyDown","key","appBar","appBarStates","SEARCH","flexGrow","borderRadius","shape","backgroundColor","alpha","common","white","marginLeft","breakpoints","up","spacing","padding","pointerEvents","paddingLeft","transition","transitions","create","Alert","SnackBar","close","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","default","autoHideDuration","require","snackBar","down","left","top","right","bottom","Home","pt","token","Overlay","opacity","style","background","willChange","Artist","hover","name","avatarUrl","detailOpened","setHover","setState","Grid","xs","sm","md","Card","onMouseOver","onMouseOut","ButtonBase","CardMedia","media","image","imgTest","colors","grey","content","p","Typography","textAlign","fontSize","SearchResult","requestSeach","urlSearch","pathname","undefined","prevProps","prevState","snapshot","prevSearchInput","searchLoading","searchResult","artists","authors","artistGrid","py","container","map","largeImg","url","LinearProgress","Container","searchError","input","MYFEED_TOKEN","MYSEED_API_URL","actionSeach","LoginCheckedRoute","component","rest","authed","isLoggedIn","render","to","path","Login","exact","Layout","layoutVisible","fullSizeBgImg","rootFullSizeBgImg","routes","backgroundImage","bgImg","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundSize","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION__","compose","createBrowserHistory","createStore","appState","router","connectRouter","form","applyMiddleware","routerMiddleware","thunk","ReactDOM","CssBaseline","ThemeProvider","document","getElementById","serviceWorker","ready","registration","unregister","catch","console","info","success"],"mappings":"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","file":"static/js/main.3f2dac96.chunk.js","sourcesContent":["import SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport Box from '@mui/material/Box';\nimport React, {Component} from 'react';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport { withStyles } from '@mui/styles';\nimport {HomeRounded as HomeIcon} from '@mui/icons-material';\nimport {connect} from 'react-redux';\nimport {drawerStates} from '../../reducers/layout/drawer';\nimport {APP_CONST, history} from '../../index';\nimport PropTypes from 'prop-types';\n\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nclass Drawer extends Component {\n\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    toggle: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {classes, open, toggle} = this.props;\n\n    const changeDestination = (destination) => {\n      history.push( );\n      toggle(false);\n    };\n\n    const disconect = () => {\n      localStorage.removeItem(APP_CONST.LOCAL_STORAGE.SPOTIFY_TOKEN);\n      changeDestination('/login');\n    };\n\n    return (\n        <SwipeableDrawer\n            disableBackdropTransition={!iOS}\n            disableDiscovery={iOS}\n            anchor=\"left\"\n            open={open}\n            onOpen={() => toggle(true)}\n            onClose={() => toggle(false)}>\n          <Box bgcolor=\"primary.main\"\n               color=\"primary.contrastText\"\n               className={classes.header}>\n            <Typography variant=\"h6\" gutterBottom={true}>\n              MySeed\n            </Typography>\n            <Button variant=\"outlined\" color=\"inherit\" onClick={disconect}>\n              Déconnexion\n            </Button>\n          </Box>\n          <List className={classes.menu}>\n            <ListItem button key=\"drawer_home\" onClick={() => changeDestination('/')}>\n              <ListItemIcon><HomeIcon color=\"inherit\"/></ListItemIcon>\n              <ListItemText primary=\"Accueil\"/>\n            </ListItem>\n          </List>\n        </SwipeableDrawer>\n    );\n  }\n}\n\nconst styles = theme => ({\n  header: {\n    height: 275,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    boxShadow: 'inset 0 0 0 2000px rgba(0, 0, 0, 0.3)',\n  },\n  menu: {\n    width: 250,\n  },\n});\n\nconst mapStateToProps = state => {\n  const open = state.app.layout.drawer.open;\n  return {open};\n};\n\nconst mapDispatchToProps = dispatch => ({\n  toggle: open => dispatch({type: drawerStates.OPEN, open: open}),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    withStyles(styles)(Drawer));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Container } from '@mui/material';\nimport { withStyles } from '@mui/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport { layoutStates } from '../reducers/layout';\nimport { APP_CONST, history } from \"../index\";\nimport { snackBarSeverity, snackBarState } from \"../reducers/layout/snackBar\";\nimport { store } from '../index';\n\nconst spotify_client_id = 'a99c487f77d84bf3a88c6cbd671203fd';\nconst spotify_client_secret = '9fb02c5fd9034ce3bb576009d5d1a1ee';\nconst spotify_client_scopes = 'user-read-email user-read-private user-library-read user-follow-read user-top-read user-read-recently-played';\nconst spotify_login_callback = 'http://localhost:3000/login';\n\nclass LoginComponent extends Component {\n\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        showError: PropTypes.func.isRequired,\n        retry: PropTypes.bool\n    };\n\n    componentDidMount() {\n        const { location, showError } = this.props;\n        store.dispatch({ type: layoutStates.VISIBLE, visible: false });\n        store.dispatch({ type: layoutStates.FULL_SIZE_CONTENT, fullSizeContent: true });\n\n        const { retry } = this.props;\n        if (retry) spotifyAuthorize();\n\n        const getterParams = extractGetters(location.search.substring(1));\n        if (getterParams.code) spotifyGetToken(getterParams.code, showError);\n\n        const isLoggedIn = localStorage.getItem(APP_CONST.LOCAL_STORAGE.SPOTIFY_TOKEN);\n        if (isLoggedIn) history.push('/');\n    }\n\n    render() {\n        return (\n            <Container maxWidth={false}>\n                <Dialog open={true} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Connexion</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Vous devez vous connecter avec votre compte Spotify pour pouvoir\n                            profiter de ce service.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={spotifyAuthorize} color=\"primary\">Se connecter</Button>\n                    </DialogActions>\n                </Dialog>\n            </Container>\n        );\n    }\n}\n\nconst extractGetters = (getterString) => {\n    return getterString.split('&').reduce(\n        function (initial, item) {\n            if (item) {\n                const parts = item.split('=');\n                initial[parts[0]] = decodeURIComponent(parts[1]);\n            }\n            return initial;\n        }, {});\n};\n\nconst spotifyAuthorize = () => {\n    window.location = 'https://accounts.spotify.com/authorize' +\n        '?response_type=code' +\n        '&client_id=' + spotify_client_id +\n        '&scope=' + encodeURIComponent(spotify_client_scopes) +\n        '&redirect_uri=' + encodeURIComponent(spotify_login_callback);\n};\n\nconst spotifyGetToken = (code, showError) => {\n\n    const header = {\n        'Authorization': `Basic ${Buffer.from(`${spotify_client_id}:${spotify_client_secret}`, 'base64')}`,\n        'Content-Type': 'application/x-www-form-urlencoded'\n    }\n\n    const body = `grant_type=authorization_code&code=${code}&redirect_uri=${encodeURIComponent(spotify_login_callback)}`;\n\n    fetch('https://accounts.spotify.com/api/token', { method: 'post', headers: header, body: body })\n        .then(response => response.json())\n        .then(data => {\n            localStorage.setItem(APP_CONST.LOCAL_STORAGE.SPOTIFY_TOKEN, data.access_token);\n            localStorage.setItem(APP_CONST.LOCAL_STORAGE.SPOTIFY_REFRESH_TOKEN, data.refresh_token);\n            history.push('/');\n        });\n};\n\nconst styles = theme => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n    showError: (msg) => {\n        dispatch({ type: snackBarState.severity, severity: snackBarSeverity.error });\n        dispatch({ type: snackBarState.message, message: msg });\n        dispatch({ type: snackBarState.isOpen, isOpen: true });\n    },\n});\n\nexport default connect(null, mapDispatchToProps)(\n    withStyles(styles)(LoginComponent),\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createTheme } from '@mui/material/styles';\n\nexport default createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#e91e63',\n    },\n  },\n  overrides: {\n    body: {\n      margin: 0,\n    },\n  },\n});","import {combineReducers} from 'redux';\n\nexport const searchStates = {\n    LOADING: 'SEARCH_LOADING',\n    RESULT: 'SEARCH_RESULT',\n    ERROR: 'SEARCH_ERROR'\n};\n\nexport function loading(state = false, action) {\n  switch (action.type) {\n    case searchStates.LOADING:\n      return action.loading;\n    default:\n      return state;\n  }\n}\n\nexport function result(state = null, action) {\n  switch (action.type) {\n    case searchStates.RESULT:\n      return action.result;\n    default:\n      return state;\n  }\n}\n\nexport function error(state = null, action) {\n  switch (action.type) {\n    case searchStates.ERROR:\n      return action.error;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({loading, result, error});\n\n","import {combineReducers} from 'redux';\nimport layout from './layout/index';\nimport search from './search';\n\nexport default combineReducers({layout, search});","import React, { Component } from 'react';\nimport { withStyles } from '@mui/styles';\nimport MaterialAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Box from '@mui/material/Box';\nimport { SearchRounded as SearchIcon } from '@mui/icons-material';\nimport InputBase from '@mui/material/InputBase';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { drawerStates } from '../../reducers/layout/drawer';\nimport { appBarStates } from \"../../reducers/layout/appBar\";\nimport { history } from \"../../index\";\nimport { alpha } from '@mui/system';\n\nclass AppBar extends Component {\n\n  static propTypes = {\n    searchValue: PropTypes.string,\n    toggleDrawer: PropTypes.func.isRequired,\n    dispatchSearch: PropTypes.func.isRequired,\n  }\n\n  render() {\n    const { classes, searchValue, toggleDrawer, dispatchSearch } = this.props;\n    const search = txt => {\n      history.push((txt.length > 0) ? '/search/' + txt : '/');\n      dispatchSearch(txt)\n    }\n    return (\n      <div>\n        <MaterialAppBar color=\"primary\" elevation={0} position=\"fixed\" className={classes.root} >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              edge=\"start\"\n              aria-label=\"menu\"\n              onClick={() => toggleDrawer(true)}>\n              <MenuIcon />\n            </IconButton>\n            <Box className={classes.title} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Rechercher...\"\n                className={classes.searchInput}\n                value={searchValue && searchValue}\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(event) => search(event.target.value)}\n                onKeyDown={(event) => {\n                  if (event.key === \"Enter\") search(event.target.value);\n                }}\n              />\n            </div>\n          </Toolbar>\n        </MaterialAppBar>\n        <Toolbar />\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: { flexGrow: 1 },\n  title: { flexGrow: 1 },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  searchInput: {\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n      color: theme.palette.common.white,\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: `calc(1em + ${theme.spacing(6)})`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '14ch',\n        '&:focus': {\n          width: '40ch',\n        },\n      },\n    },\n  }\n});\n\nconst mapStateToProps = state => {\n  const searchValue = state.app.layout.appBar.search;\n  return { searchValue };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSearch: txt => dispatch({ type: appBarStates.SEARCH, search: txt }),\n  toggleDrawer: open => dispatch({ type: drawerStates.OPEN, open: open }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  withStyles(styles)(AppBar));","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport PropTypes from \"prop-types\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport {snackBarSeverity, snackBarState} from \"../../reducers/layout/snackBar\";\nimport MuiAlert from '@mui/material/Alert';\nimport { withStyles } from '@mui/styles';\n\nconst {Component} = require(\"react\");\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass SnackBar extends Component {\n\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        severity: PropTypes.string,\n        message: PropTypes.string,\n        isOpen: PropTypes.bool.isRequired,\n        close: PropTypes.func.isRequired,\n    }\n\n    render() {\n        const {classes, severity, message, isOpen, close} = this.props;\n        const handleClose = (event, reason) => {\n            if (reason === 'clickaway') {\n                return;\n            }\n            close();\n        };\n        return (\n            <Snackbar className={classes.root} open={isOpen} onClose={handleClose}\n                      anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n                      message={severity === snackBarSeverity.default && message}\n                      autoHideDuration={6000}>\n                {severity !== snackBarSeverity.default &&\n                <Alert onClose={handleClose} severity={severity}>{message}</Alert>}\n            </Snackbar>\n\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        [theme.breakpoints.down('xs')]: {\n            display: 'block',\n            left: 8,\n            top: null,\n            right: 8,\n            bottom: 8,\n        }\n    }\n})\n\nconst mapStateToProps = state => {\n    const severity = state.app.layout.snackBar.severity;\n    const message = state.app.layout.snackBar.message;\n    const isOpen = state.app.layout.snackBar.isOpen;\n    return {severity, message, isOpen};\n};\n\nconst mapDispatchToProps = dispatch => ({\n    close: () => dispatch({type: snackBarState.isOpen, isOpen: false})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SnackBar));\n","import React, {Component} from 'react';\nimport { withStyles } from '@mui/styles';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {APP_CONST, history} from '../index';\nimport {layoutStates} from \"../reducers/layout\";\nimport { Box } from '@mui/system';\nimport {store} from '../index';\nclass Home extends Component {\n  static propTypes = {\n    token: PropTypes.string,\n  };\n\n  componentDidMount() {\n    if (!localStorage.getItem(APP_CONST.LOCAL_STORAGE.SPOTIFY_TOKEN)) {\n      history.push('/login');\n    }\n\n    store.dispatch({ type: layoutStates.VISIBLE, visible: true });\n    store.dispatch({ type: layoutStates.FULL_SIZE_CONTENT, fullSizeContent: false });\n  }\n\n  render() {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" pt={8}>\n        \n      </Box>\n    );\n  }\n}\n\nconst styles = (theme) => ({\n  \n});\n\nconst mapStateToProps = state => {\n  const token = state.app.token;\n  return {token};\n};\n\nconst mapDispatchToProps = dispatch => ({\n  \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));","export default __webpack_public_path__ + \"static/media/man_listening_music_in_sleeping.7e55c57d.jpg\";","import React, {Component} from \"react\";\nimport { withStyles } from '@mui/styles';\nimport PropTypes from \"prop-types\";\n\nclass Overlay extends Component {\n\n    static propTypes = {\n        color: PropTypes.string,\n        opacity: PropTypes.number,\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {color, opacity} = this.props;\n        return (\n            <div className={classes.root}\n                 style={{\n                     background: color,\n                     opacity: opacity\n                 }}/>\n        )\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        height: \"100%\",\n        width: \"100%\",\n        transition: \".2s ease\",\n        willChange: \"opacity\",\n    }\n});\n\nexport default withStyles(styles)(Overlay);","import React, {Component} from \"react\";\nimport {Box, ButtonBase, Card, CardMedia, colors, Grid, Typography} from \"@mui/material\";\nimport { withStyles } from '@mui/styles';\nimport PropTypes from \"prop-types\";\nimport imgTest from \"../../../assets/img/man_listening_music_in_sleeping.jpg\";\nimport Overlay from \"../Overlay\";\n\nclass Artist extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hover: false,\n        };\n    }\n\n\n    static propTypes = {\n        name: PropTypes.string,\n        avatarUrl: PropTypes.string,\n    };\n\n    render() {\n        const {classes} = this.props;\n        const {name, avatarUrl} = this.props;\n        const {hover, detailOpened} = this.state;\n\n        const setHover = (value) => {\n            this.setState({hover: value});\n        };\n\n        return (\n            <>\n                <Grid item xs={detailOpened ? 12 : 6} sm={detailOpened ? 12 : 4} md={detailOpened ? 12 : 2}>\n                    <Card className={classes.root}\n                          onMouseOver={() => setHover(true)}\n                          onMouseOut={() => setHover(false)}>\n                        <ButtonBase className={classes.button}>\n                            <CardMedia className={classes.media} image={avatarUrl ? avatarUrl : imgTest}>\n                                <Overlay color={colors.grey[\"900\"]} opacity={!hover ? 0.3 : 0}/>\n                                <Box className={classes.content} p={2}>\n                                    <Typography variant=\"overline\" className={classes.name}>{name}</Typography>\n                                </Box>\n                            </CardMedia>\n                        </ButtonBase>\n                    </Card>\n                </Grid>\n            </>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        height: 150\n    },\n    button: {\n        width: \"100%\",\n        height: \"100%\",\n    },\n    media: {\n        width: \"100%\",\n        height: \"100%\",\n        textAlign: \"initial\"\n    },\n    content: {\n        position: \"absolute\",\n    },\n    name: {\n        color: colors.grey[\"50\"],\n        fontSize: \"larger\",\n    }\n});\n\nexport default withStyles(styles)(Artist);","import React, { Component } from \"react\";\nimport { Box, Container, Grid, LinearProgress } from \"@mui/material\";\nimport { withStyles } from '@mui/styles';\nimport { layoutStates } from \"../reducers/layout\";\nimport { APP_CONST, history } from \"../index\";\nimport PropTypes from \"prop-types\";\nimport { appBarStates } from \"../reducers/layout/appBar\";\nimport { searchStates } from \"../reducers/search\"\nimport { connect } from \"react-redux\";\nimport Typography from \"@mui/material/Typography\";\nimport Artist from \"./Util/Card/Artist\";\nimport { store } from \"../index\";\n\nclass SearchResult extends Component {\n\n    static propTypes = {\n        dispatchSearch: PropTypes.func.isRequired,\n        requestSeach: PropTypes.func.isRequired,\n        location: PropTypes.object,\n        searchInput: PropTypes.string,\n        searchLoading: PropTypes.bool,\n        searchResult: PropTypes.object,\n        searchError: PropTypes.string\n    }\n\n    componentDidMount() {\n        if (!localStorage.getItem(APP_CONST.LOCAL_STORAGE.SPOTIFY_TOKEN)) {\n            history.push('/login');\n        }\n\n        store.dispatch({ type: layoutStates.VISIBLE, visible: true });\n        store.dispatch({ type: layoutStates.FULL_SIZE_CONTENT, fullSizeContent: false });\n\n        const { searchInput, location, dispatchSearch, requestSeach } = this.props;\n        const urlSearch = location.pathname.split(\"/\")[2];\n        if (urlSearch !== undefined && searchInput !== urlSearch) {\n            dispatchSearch(urlSearch);\n        } else {\n            if (searchInput.length === 0) history.push('/')\n            else requestSeach(searchInput);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const prevSearchInput = prevProps.searchInput;\n        const { searchInput, requestSeach } = this.props;\n        if (searchInput.length === 0) history.push('/')\n        else if (prevSearchInput !== searchInput) requestSeach(searchInput);\n    }\n\n    render() {\n        const { searchLoading, searchResult } = this.props;\n        const artists = searchResult && searchResult.authors;\n\n        const artistGrid = !artists ? \"\" : (\n            <Box py={2}>\n                <Typography variant=\"h5\" gutterBottom>Artistes</Typography>\n                <Grid container spacing={2}>\n                    {artists.map(item => {\n                        return <Artist name={item.name} avatarUrl={item.largeImg?.url} key={\"artist_\" + item.id} />\n                    })}\n                </Grid>\n            </Box>\n        )\n\n        return (\n            <>\n                {searchLoading && <LinearProgress color=\"secondary\" />}\n                <Container maxWidth={'xl'}>\n                    {artistGrid}\n                </Container>\n            </>\n        );\n    }\n}\n\nconst styles = (theme) => {\n\n};\n\nconst actionSeach = (dispatch, input) => {\n    const header = {\n        'Authorization': `Bearer ${localStorage.getItem(APP_CONST.LOCAL_STORAGE.MYFEED_TOKEN)}`,\n        'Content-Type': 'application/json'\n    }\n\n    dispatch({ type: searchStates.LOADING, loading: true });\n    fetch(`${APP_CONST.MYSEED_API_URL}/search/${input}`, { method: 'get', headers: header })\n        .then(response => response.json())\n        .then(data => {\n            data['@type'] === \"hydra:Error\"\n                ? dispatch({ type: searchStates.ERROR, error: data['hydra:description'] ? data['hydra:description'] : \"Une erreur est survenue.\" })\n                : dispatch({ type: searchStates.RESULT, result: data });\n            dispatch({ type: searchStates.LOADING, loading: false });\n        });\n}\n\nconst mapStateToProps = state => {\n    const searchInput = state.app.layout.appBar.search;\n    const searchLoading = state.app.search.loading;\n    const searchResult = state.app.search.result;\n    const searchError = state.app.search.error;\n    return { searchInput, searchLoading, searchResult, searchError };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchSearch: txt => dispatch({ type: appBarStates.SEARCH, search: txt }),\n    requestSeach: txt => actionSeach(dispatch, txt)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SearchResult));","import {Route} from 'react-router-dom';\nimport {Redirect} from 'react-router';\nimport React from 'react';\nimport Login from '../components/Login';\nimport Home from '../components/Home';\nimport SearchResult from '../components/SearchResult';\nimport {APP_CONST} from '../index';\n\nfunction LoginCheckedRoute({component: Component, authed, ...rest}) {\n  const isLoggedIn = localStorage.getItem(APP_CONST.LOCAL_STORAGE.SPOTIFY_TOKEN);\n  return (\n      <Route\n          {...rest}\n          render={(props) => isLoggedIn\n              ? <Component {...props} />\n              : <Redirect to={{pathname: '/login', state: {from: props.location}}}/>}\n      />\n  )\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default [\n  <Route path=\"/login\" key=\"route_login\" component={Login}/>,\n  <LoginCheckedRoute path=\"/\" key=\"route_home\" exact component={Home}/>,\n  <LoginCheckedRoute path=\"/search\" key=\"route_search\" component={SearchResult}/>\n];","export default __webpack_public_path__ + \"static/media/woman_looking_through_records_at_vinyl_shop.a2443996.jpg\";","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport AppBar from './AppBar';\nimport Drawer from './Drawer';\nimport PropTypes from 'prop-types';\nimport SnackBar from \"./SnackBar\";\nimport routes from './../../routes';\nimport {Switch} from 'react-router-dom';\nimport { withStyles } from '@mui/styles';\nimport bgImg from '../../assets/img/woman_looking_through_records_at_vinyl_shop.jpg';\n\nclass Layout extends Component {\n\n    static propTypes = {\n        layoutVisible: PropTypes.bool.isRequired,\n    };\n\n    render() {\n        const {layoutVisible, fullSizeBgImg, classes} = this.props;\n        return (\n            <div className={fullSizeBgImg && classes.rootFullSizeBgImg}>\n                <SnackBar/>\n                {layoutVisible && (\n                    <div>\n                        <AppBar/>\n                        <Drawer/>\n                    </div>\n                )}\n                <Switch>{routes}</Switch>\n            </div>\n        );\n    }\n}\n\nconst styles = () => ({\n    rootFullSizeBgImg: {\n      height: '100vh',\n      backgroundImage: 'url(' + bgImg + ')',\n      backgroundPosition: 'center center',\n      backgroundRepeat: 'no-repeat',\n      backgroundAttachment: 'fixed',\n      backgroundSize: 'cover'\n  }\n});\n\nconst mapStateToProps = state => {\n    const layoutVisible = state.app.layout.visible;\n    return {layoutVisible};\n};\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(Layout));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reducer as form} from 'redux-form';\nimport {createBrowserHistory} from 'history';\nimport {ConnectedRouter, connectRouter, routerMiddleware,} from 'connected-react-router';\nimport * as serviceWorker from './serviceWorker';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport appState from './reducers';\nimport LayoutComponent from './components/Layout/Layout';\n\nconst composeEnhancers = (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION__) || compose;\n\nexport const APP_CONST = {\n    LOCAL_STORAGE: {\n        SPOTIFY_TOKEN: 'APP_CONST_LOCAL_STORAGE_SPOTIFY_TOKEN',\n        SPOTIFY_REFRESH_TOKEN: 'APP_CONST_LOCAL_STORAGE_SPOTIFY_REFRESH_TOKEN',\n    },\n};\n\nexport const history = createBrowserHistory();\nexport const store = createStore(\n    combineReducers({\n      app: appState,\n      router: connectRouter(history),\n      form,\n      composeEnhancers,\n    }),\n    applyMiddleware(routerMiddleware(history), thunk),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n      <ConnectedRouter history={history}>\n          <CssBaseline/>\n          <ThemeProvider theme={theme}>\n              <LayoutComponent/>\n          </ThemeProvider>\n      </ConnectedRouter>\n  </Provider>,\n    document.getElementById('root')\n);\n\n// If\n// you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {combineReducers} from 'redux';\nimport appBar from './appBar';\nimport drawer from './drawer'\nimport snackBar from \"./snackBar\";\n\nexport const layoutStates = {\n  VISIBLE: 'LAYOUT_VISIBLE_STATE',\n  FULL_SIZE_CONTENT: 'FULL_SIZE_CONTENT'\n};\n\nexport function visible(state = true, action) {\n  switch (action.type) {\n    case layoutStates.VISIBLE:\n      return action.visible;\n    default:\n      return state;\n  }\n}\n\nexport function fullSizeContent(state = true, action) {\n  switch (action.type) {\n    case layoutStates.FULL_SIZE_CONTENT:\n      return action.fullSizeContent;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({visible, fullSizeContent, appBar, drawer, snackBar});","import {combineReducers} from 'redux';\n\nexport const snackBarSeverity = {\n    default: 'default',\n    info: 'info',\n    success: 'success',\n    error: 'error'\n};\n\nexport const snackBarState = {\n    severity: 'SNACKBAR_SEVERITY',\n    message: 'SNACKBAR_MESSAGE',\n    isOpen: 'SNACKBAR_IS_OPEN',\n};\n\nexport function severity(state = null, action) {\n    switch (action.type) {\n        case snackBarState.severity:\n            return action.severity;\n        default:\n            return state;\n    }\n}\n\nexport function message(state = null, action) {\n    switch (action.type) {\n        case snackBarState.message:\n            return action.message;\n        default:\n            return state;\n    }\n}\n\nexport function isOpen(state = false, action) {\n    switch (action.type) {\n        case snackBarState.isOpen:\n            return action.isOpen;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({severity, message, isOpen});","import {combineReducers} from 'redux';\n\nexport const appBarStates = {\n  SEARCH: 'APP_BAR_SEARCH',\n};\n\nexport function search(state = \"\", action) {\n  switch (action.type) {\n    case appBarStates.SEARCH:\n      return action.search;\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({search});","import {combineReducers} from 'redux';\n\nexport const drawerStates = {\n  OPEN: 'DRAWER_OPEN_STATE',\n};\n\nexport function open(state = false, action) {\n  switch (action.type) {\n    case drawerStates.OPEN:\n      return action.open;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({open});"],"sourceRoot":""}